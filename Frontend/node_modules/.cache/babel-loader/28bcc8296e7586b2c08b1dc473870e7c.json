{"ast":null,"code":"var _jsxFileName = \"E:\\\\GEN AI\\\\pro\\\\ReactFakeShop\\\\src\\\\components\\\\ChatbotWindow.js\",\n    _s = $RefreshSig$();\n\n// ChatbotWindow.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatbotWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatbotWindow = _ref => {\n  _s();\n\n  let {\n    onClose\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [response, setResponse] = useState('');\n  const inputRef = useRef(null);\n\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSendMessage = async () => {\n    if (inputValue.trim() !== '') {\n      setMessages(prevMessages => [...prevMessages, {\n        text: inputValue,\n        user: 'user'\n      }]);\n\n      try {\n        const response = await fetch('http://127.0.0.1:5000/process_text', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            text: inputValue\n          })\n        });\n        const responseData = await response.json();\n        setResponse(responseData.response);\n      } catch (error) {\n        console.error('Error sending request:', error);\n      }\n\n      setInputValue('');\n    }\n\n    ;\n  };\n\n  useEffect(() => {\n    // Scroll to the bottom of the chat window when messages change\n    inputRef.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.user}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\",\n        value: inputValue,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatbotWindow, \"mCW46N+C8e1ExFzsupFYfFkT2LI=\");\n\n_c = ChatbotWindow;\nexport default ChatbotWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatbotWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ChatbotWindow","onClose","messages","setMessages","inputValue","setInputValue","response","setResponse","inputRef","handleInputChange","e","target","value","handleSendMessage","trim","prevMessages","text","user","fetch","method","headers","body","JSON","stringify","responseData","json","error","console","current","scrollIntoView","behavior","map","message","index"],"sources":["E:/GEN AI/pro/ReactFakeShop/src/components/ChatbotWindow.js"],"sourcesContent":["// ChatbotWindow.js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport './ChatbotWindow.css';\r\n\r\nconst ChatbotWindow = ({ onClose }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [response, setResponse] = useState('');\r\n  const inputRef = useRef(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    if (inputValue.trim() !== '') {\r\n      setMessages((prevMessages) => [...prevMessages, { text: inputValue, user: 'user' }]);\r\n      \r\n      try {\r\n      const response = await fetch('http://127.0.0.1:5000/process_text', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ text: inputValue }),\r\n      });\r\n\r\n      const responseData = await response.json();\r\n      setResponse(responseData.response);\r\n    } catch (error) {\r\n      console.error('Error sending request:', error);\r\n    }\r\n    setInputValue('');\r\n  };\r\n\r\n    }\r\n  \r\n\r\n  useEffect(() => {\r\n    // Scroll to the bottom of the chat window when messages change\r\n    inputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"chatbot-window\">\r\n      <div className=\"chat-header\">\r\n        <span>Chatbot</span>\r\n        <button className=\"close-button\" onClick={onClose}>\r\n          X\r\n        </button>\r\n      </div>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.user}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n        <div ref={inputRef}></div>\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type your message...\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatbotWindow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}